const {
  SlashCommandBuilder,
  ChatInputCommandInteraction,
  ThreadAutoArchiveDuration,
  EmbedBuilder,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
} = require("discord.js");

const { themeChannel, adminRole } = require("../config");

module.exports = {
  desc: {
    desc: "Lance une nouvelle proposition de th√®me CRIL.",
    emote: "üå±",
    exemple: [
      {
        cmd: "/thematique Cards Against Humanity",
        desc: 'Lance un nouveau thread avec le nom "Cards Against Humanity" pour proposer cette id√©e d\'activit√© !',
      },
    ],
    usage: "/thematique [nom du th√®me]",
  },
  data: new SlashCommandBuilder()
    .setName("thematique")
    .setDescription("Lance une nouvelle proposition de th√®me CRIL.")
    .addStringOption((option) =>
      option
        .setName("titre")
        .setDescription("Titre du th√®me")
        .setMinLength(3)
        .setMaxLength(35)
        .setRequired(true)
    ),
  /**
   * @param {ChatInputCommandInteraction} interaction
   */
  async execute(interaction) {
    if (interaction.channel.id != themeChannel)
      return interaction.reply({
        content: `Cette commande n'est utilisable que dans le channel <#${themeChannel}> !`,
        ephemeral: true,
      });

    let theme = interaction.options.getString("titre");

    let username = interaction.member.nickname || interaction.user.username;

    let thread = await interaction.channel.threads.create({
      name: `${theme} - ${username} - Theme`,
      autoArchiveDuration: ThreadAutoArchiveDuration.OneWeek,
      reason: `${interaction.user.username} proposed the theme ${theme}`,
    });

    await thread.members.add(interaction.user.id);

    let embed = new EmbedBuilder()
      .setTitle("üå± Nouvelle proposition de th√®me ! üå±")
      .setDescription(
        `${username} vient de proposer le th√®me suivant : ${theme} ! \nProfitez de ce channel pour discuter des modalit√©s de ce dernier, puis une fois que tout le monde est d'accord, il suffit de cliquer sur le bouton "Cr√©er" en vert et entrer les diff√©rents champs correctement ! \nVous pouvez √©galement annuler le tout avec le bouton correspondant.`
      )
      .setColor("Green")
      .setFooter({
        text: `Demand√© par ${username}`,
        iconURL: interaction.user.avatarURL(),
      })
      .setTimestamp();

    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder()
        .setCustomId("create-theme")
        .setLabel("Cr√©er")
        .setStyle(ButtonStyle.Success)
        .setEmoji("üå¥"),

      new ButtonBuilder()
        .setCustomId("cancel-theme")
        .setLabel("Annuler")
        .setStyle(ButtonStyle.Danger)
        .setEmoji("‚ò¢Ô∏è")
    );

    let welcomeMsg = await thread.send({
      content: `<@${interaction.user.id}> | <@&${adminRole}>`,
      embeds: [embed],
      components: [row],
    });

    thread.messages.pin(welcomeMsg.id);

    interaction.reply({
      content: `Votre proposition a correctement √©t√© prise en compte ! \n Dirigez vous sur le thread <#${thread.id}>`,
      ephemeral: true,
    });

    //
  },
};
